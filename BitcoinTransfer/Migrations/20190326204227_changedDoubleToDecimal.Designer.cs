// <auto-generated />
using System;
using BitcoinTransfer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BitcoinTransfer.Migrations
{
    [DbContext(typeof(BitcoinDbContext))]
    [Migration("20190326204227_changedDoubleToDecimal")]
    partial class changedDoubleToDecimal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BitcoinTransfer.Models.TransactionModel", b =>
                {
                    b.Property<long>("Transaction")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("Confirmation");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("FromWalletId");

                    b.Property<bool>("HasViewed");

                    b.Property<long>("ToWalletId");

                    b.Property<string>("TransactionId");

                    b.HasKey("Transaction");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BitcoinTransfer.Models.WalletModel", b =>
                {
                    b.Property<long>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<decimal>("ConfirmedBalance");

                    b.Property<string>("PrivateKey");

                    b.HasKey("WalletId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            WalletId = 1L,
                            Address = "miudc6pyYwdVTxuDYCNdsJDESxUZz3wGKq",
                            ConfirmedBalance = 0m,
                            PrivateKey = "cPK1Gssv5UD79shik4yoCqpXUuYXoMArwEGjPPfzXHVnzZCRZErm"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
